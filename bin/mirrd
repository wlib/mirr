#!/usr/bin/env ruby
# The mirr daemon
# Daniel Ethridge

#require "mirrd"
#include Mirrd
#require "mirr/version"
require 'socket'
require 'rubygems/package'
require 'fileutils'
require 'zlib'
require "pathname"
require "zip"

# Borrowed from Rack for extra compatability
def daemonize()
  if RUBY_VERSION < "1.9"
    exit if fork
    Process.setsid
    exit if fork
    Dir.chdir "/" 
    STDIN.reopen "/dev/null"
    STDOUT.reopen "/dev/null", "a" 
    STDERR.reopen "/dev/null", "a" 
  else
    Process.daemon
  end 
end

# Zip a directory
def zipdir(dir)
  basename = File.basename(dir)
  zfname = "#{Dir.home}/.mirr/.#{basename}.zip"
  Zip::File.open(zfname, Zip::File::CREATE) do |zf|
    Dir[File.join(dir, '**', '**')].each do |file|
      path = Pathname.new(file)
      zf.add(path.relative_path_from(dir), file)
    end
  end
end

# Define the server - *This code doesn't work right now, it is a placeholder*
def server()
  server = TCPServer.new(7122)
  while true
    Thread.new(server.accept) do |client|
      requestfiles = client.read
      puts "Client requested #{requestfiles}"
      client.write requestfiles
      client.close
    end
  end
end

puts "Starting the server now"
server()
